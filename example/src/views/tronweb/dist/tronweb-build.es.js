/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function t(t,n,e,r){return new(e||(e=Promise))((function(i,o){function a(t){try{l(r.next(t))}catch(t){o(t)}}function s(t){try{l(r.throw(t))}catch(t){o(t)}}function l(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(a,s)}l((r=r.apply(t,n||[])).next())}))}let n=require("tronweb"),e=null;class r{constructor(t){this.code=t.code,this.data=t.data,this.message=t.message}}class i{constructor(t,n,e){this.code=t,this.message=n,this.data=e}}const o={SUCCESS:t=>new i(0,"success",t),DEFAULT_STATE:t=>new i(1,"default state",t),ERROR_STATE:t=>new i(4,"error state",t),NOT_SUPPORT:t=>new i(5,"The method is not supported",t)};class a{getAccount(n){return t(this,void 0,void 0,(function*(){try{let t=yield window.tronWeb.trx.getAccount(n),e=[t.address];return console.log(t.address,"PP"),new r(o.SUCCESS(e))}catch(t){return new r(o.ERROR_STATE(null))}}))}}class s{getBalance(n){return t(this,void 0,void 0,(function*(){let t=yield window.tronWeb.trx.getBalance(n);return new r(o.SUCCESS(t))}))}}class l{getBlock(n){return t(this,void 0,void 0,(function*(){let t=yield window.tronWeb.trx.getBlock(n),e={number:t.block_header.raw_data.number,parentHash:t.block_header.raw_data.parentHash,miner:t.block_header.raw_data.witness_address,timestamp:t.block_header.raw_data.timestamp,hash:t.blockID,nonce:null,sha3Uncles:null,logsBloom:null,transactionsRoot:t.block_header.raw_data.txTrieRoot,stateRoot:null,difficulty:null,totalDifficulty:null,extraData:null,size:null,gasLimit:null,gasUsed:null,transactions:t.transactions?t.transactions.length:0,uncles:null};return new r(o.SUCCESS(e))}))}}class d{getBlockNumber(n){return t(this,void 0,void 0,(function*(){let t=(yield window.tronWeb.trx.getBlock(n)).block_header.raw_data.number;return new r(o.SUCCESS(t))}))}}class c{getTransaction(n){return t(this,void 0,void 0,(function*(){try{let t=yield window.tronWeb.trx.getTransactionInfo(n),e=yield window.tronWeb.trx.getBlock(t.blockNumber),i=yield window.tronWeb.trx.getTransaction(n),a=yield window.tronWeb.address.fromHex(i.raw_data.contract[0].parameter.value.owner_address),s=(yield window.tronWeb.address.fromHex(i.raw_data.contract[0].parameter.value.contract_address))?yield window.tronWeb.address.fromHex(i.raw_data.contract[0].parameter.value.contract_address):yield window.tronWeb.address.fromHex(i.raw_data.contract[0].parameter.value.to_address);function l(){if(!e.transactions)return null;for(let n=0;n<e.transactions.length;n++)return t.id==e.transactions[n].txID?n:null}function d(){let t=0;return t="TransferAssetContract"!=i.raw_data.contract[0].parameter.type&&i.raw_data.contract[0].parameter.value.amount?i.raw_data.contract[0].parameter.value.amount:0,t}let c=i.raw_data.contract[0].parameter.value.data;if(t){let n={hash:t.id,nonce:null,blockHash:e.blockID,blockNumber:t.blockNumber,transactionIndex:l(),from:a,to:s,value:d(),gas:null,gasPrice:null,input:c};return new r(o.SUCCESS(n))}return new r(o.ERROR_STATE(null))}catch(t){return new r(o.ERROR_STATE(null))}}))}}class u{getTransactionCount(){return t(this,void 0,void 0,(function*(){return new r(o.NOT_SUPPORT(null))}))}}let w=require("tronweb");class h{sendSignedTransaction(n,e,i,a,s){return t(this,void 0,void 0,(function*(){try{let t=w.providers.HttpProvider,l=null;if(t){const n=new t("https://api.shasta.trongrid.io"),e=new t("https://api.shasta.trongrid.io");l=new w(n,e,"https://api.shasta.trongrid.io")}const d=yield window.tronWeb.transactionBuilder.sendTrx(n,e,i,a),c=yield l.trx.sign(d,s);let u=yield l.trx.sendRawTransaction(c);return new r(o.SUCCESS(u))}catch(t){return new r(o.NOT_SUPPORT(null))}}))}}class v{signWithPrivateKey(){return t(this,void 0,void 0,(function*(){return new r(o.NOT_SUPPORT(null))}))}}class f{signWithWallet(n){return t(this,void 0,void 0,(function*(){return new r(o.NOT_SUPPORT(null))}))}}class g{signTransaction(n,e){return t(this,void 0,void 0,(function*(){return new r(o.NOT_SUPPORT(null))}))}}let T=require("tronweb");class p{signTransactionPrivateKey(n,e){return t(this,void 0,void 0,(function*(){try{let t=T.providers.HttpProvider,i=null;if(t){const n=new t("https://api.shasta.trongrid.io"),e=new t("https://api.shasta.trongrid.io");i=new T(n,e,"https://api.shasta.trongrid.io")}const a=yield window.tronWeb.transactionBuilder.sendTrx(n.to,n.amount,n.from,n.options);yield i.trx.sign(a,e);return new r(o.SUCCESS(null))}catch(t){const i=yield window.tronWeb.transactionBuilder.sendTrx(n.to,n.amount,n.from,n.options);return yield window.tronWeb.trx.sign(i,e),new r(o.NOT_SUPPORT(null))}}))}}class S{sendTransaction(n){return t(this,void 0,void 0,(function*(){try{return window.tronWeb.trx.sendTransaction(n.address,n.amount).then((t=>new r(o.SUCCESS(t))))}catch(t){return new r(o.DEFAULT_STATE(t))}}))}}class y{loadContract(n,e){return t(this,void 0,void 0,(function*(){try{let t=yield window.tronWeb.contract(n,e);return new r(o.SUCCESS(t))}catch(t){return new r(o.ERROR_STATE(null))}}))}}class m{constructor(){}getAccount(n){return t(this,void 0,void 0,(function*(){return yield(new a).getAccount(n)}))}getBalance(n){return t(this,void 0,void 0,(function*(){return yield(new s).getBalance(n)}))}getBlock(n){return t(this,void 0,void 0,(function*(){return yield(new l).getBlock(n)}))}getBlockNumber(n){return t(this,void 0,void 0,(function*(){return yield(new d).getBlockNumber(n)}))}getTransaction(n){return t(this,void 0,void 0,(function*(){return yield(new c).getTransaction(n)}))}getTransactionCount(){return t(this,void 0,void 0,(function*(){return yield(new u).getTransactionCount()}))}sendSignedTransaction(n,e,r,i,o){return t(this,void 0,void 0,(function*(){return yield(new h).sendSignedTransaction(n,e,r,i,o)}))}signWithWallet(n,e,r){return t(this,void 0,void 0,(function*(){return yield(new f).signWithWallet(n)}))}signWithPrivateKey(){return t(this,void 0,void 0,(function*(){return yield(new v).signWithPrivateKey()}))}signTransaction(n,e){return t(this,void 0,void 0,(function*(){return yield(new g).signTransaction(n,e)}))}signTransactionPrivateKey(n,e){return t(this,void 0,void 0,(function*(){return yield(new p).signTransactionPrivateKey(n,e)}))}sendTransaction(n){return t(this,void 0,void 0,(function*(){return yield(new S).sendTransaction(n)}))}loadContract(n,e){return t(this,void 0,void 0,(function*(){return yield(new y).loadContract(n,e)}))}}const b="4000000000",_="150000",R=!0;const P=(t,n,e)=>{let i;i=new r(o.SUCCESS(n)),t(i)};function C(t,n,e){let r=t?t.methods[n]:null;return r?{prop:r(...e)._method,func:r}:null}class E{offChainCall(n,e,i,a,s){return t(this,void 0,void 0,(function*(){let a=C(n,e,i);return a?yield new Promise((n=>t(this,void 0,void 0,(function*(){a.func(...i).call(((t,e)=>{P(n,e)})).catch((t=>{P(n,t)}))})))):new r(o.ERROR_STATE("参数有误"))}))}onChainCall(n,e,i,a){return t(this,void 0,void 0,(function*(){let t=C(n,e,i);if(!t)return new r(o.ERROR_STATE("参数有误"));let s=((l=a).callValue=l.callValue?l.callValue:b,l.feeLimit=l.feeLimit?l.feeLimit:_,l.shouldPollResponse=l.shouldPollResponse?l.shouldPollResponse:R,l);var l;let d={feeLimit:s.gasLimit,callValue:s.gasPrice,shouldPollResponse:s.shouldPollResponse};return yield new Promise((n=>{t.func(...i).send(d,((t,n)=>{})).then((t=>{P(n,t)})).catch((t=>{P(n,t)}))}))}))}}class W{constructor(){this.actions=new m,this.contract=new E}init(){return t(this,void 0,void 0,(function*(){return window.tronWeb=yield async function(){if(tronWeb.isTronLink){if(window.tronWeb)return window.tronWeb;{e=n.providers.HttpProvider;const t=new e("https://api.shasta.trongrid.io"),r=new e("https://api.shasta.trongrid.io");return new n(t,r,"https://api.shasta.trongrid.io")}}if(e=n.providers.HttpProvider,e){const t=new e("https://api.shasta.trongrid.io"),r=new e("https://api.shasta.trongrid.io");return new n(t,r,"https://api.shasta.trongrid.io")}return null}(),new r(o.SUCCESS(null))}))}}export{W as Actions,o as PredefinedStatus};
//# sourceMappingURL=tronweb-build.es.js.map
